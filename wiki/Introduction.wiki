#summary ru:Введение

= Введение =

== Причина ==
На сегодняшний день такие языки программирования как Ruby и Python предоставляют огромные возможности, при этом предоставляя их очень просто. Но проблемой этих языков является скорость которая в определённых классах задач, таких как трёхмерная графика, очень важна. Написание данной библиотеки побудил тот факт, что простые привязки к OpenGL такие как PyOpengl не дают необходимой скорости выполнения программ. Решить проблему скорости таких языков пытаются специальной трансляцией либо в байт-код виртуальной машины, либо в язык программирования для которого есть быстрый компилятор(как правило С), после чего можно получить оптимизированный машинный код. К сожалению на реальных задачах прироста производительности всё равно не хватает и такая же программа написанная на языке более низкого уровня(С,С++ и т.д.) всё равно в разы работает быстрее.

== Наше Решение ==
Мы решили, что если вынести основной цикл обрисовки в динамическую библиотеку написанную на С++ то мы решим основную проблему применения данных языков программирования в области трёхмерной графики. Все проблемы данный подход не решит но для многих классов задач он подойдёт.

== Реализация ==
В библиотеке будет реализован набор примитивов с которым можно будет работать. Для облегчения работы будут реализованы такие часто используемые примитивы как:
 * Сфера
 * Куб
 * Билборд(прямоугольник)
 * Полигон
 * Точка

Для удобной работы с массивами точек будет предоставлен отдельный набор инструментов.
Все примитивы представлены в виде объектов которые распологаются на сцене. На сцене объекты располагаются в заранее заданном порядке от которого зависит отрисовка. Объекты можно объединять в массивы у которых будет одна матрица(glPushMatrix,glPopMatrix в OpenGL) . В массивах можно объединять другие массивы, тем самым влияя на порядок отрисовки.
